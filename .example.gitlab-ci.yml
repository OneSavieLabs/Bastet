stages:
  - bastet

bastet:
  stage: bastet
  image: docker:24-dind
  services:
    - docker:24-dind
  
  variables:
    BASTET_REPO: "https://github.com/OneSavieLabs/Bastet.git"
  
  before_script:
    # Install required tools
    - apk add --no-cache docker-compose git bash curl
    
    # Clone your scanner service repository
    - git clone ${BASTET_REPO} bastet
    - cd bastet
    
  script:
    # Start the scanner service stack
    - docker-compose -f docker-compose.cicd.yml up -d
    - echo "Waiting for services to be ready..."
    - sleep 15
    
    # Verify services are running
    - docker-compose ps
    
    # Get the Python scanner container ID
    - BASTET_CONTAINER=bastet
    
    # Copy all contract files from the user's repo to scanner container
    - docker cp ${CI_PROJECT_DIR}/. $BASTET_CONTAINER:/app/scan-queue/
    
    # Execute the scan inside the container
    - |
      docker-compose exec bastet \
        poetry run python /app/main.py \
        scan \
        --folder-path /app/scan-queue/ \
        --n8n-url http://n8n:5678/api/v1 \
        --output-path /app/reports \
        --report-name scan-report \
        --format pdf
    
    # Copy scan reports back to CI workspace
    - mkdir -p ${CI_PROJECT_DIR}/scan-reports
    - docker cp $BASTET_CONTAINER:/app/reports/. ${CI_PROJECT_DIR}/scan-reports/
    
    # Display scan summary
    - cat ${CI_PROJECT_DIR}/scan-reports/scan-report.pdf
  
  after_script:
    # Cleanup: stop and remove containers
    - cd bastet || true
    - docker-compose down -v || true
  
  artifacts:
    when: always
    paths:
      - /scan-reports
    expire_in: 30 days
  
  only:
    - merge_requests
    - main
    - develop